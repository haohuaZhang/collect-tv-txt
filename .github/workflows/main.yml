name: 'Sync Fork with Upstream and Run Jobs'

on:
  schedule:
    - cron: '0 1 * * *'  # 每天 UTC 时间 01:00 自动运行
  workflow_dispatch:  # 手动触发

jobs:
  sync_with_upstream:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout this repository
      uses: actions/checkout@v2
      with:
        persist-credentials: false  # 禁用默认凭证，以便我们使用 GITHUB_TOKEN
    
    # 设置 Git 用户身份
    - name: Set up Git config
      run: |
        git config --global user.email "actions@github.com"
        git config --global user.name "GitHub Actions"

    # 备份当前分支，防止修改丢失
    - name: Create backup branch
      run: |
        git checkout -b backup-$(date +'%Y%m%d')
        
        # 使用 GITHUB_TOKEN 配置推送远程仓库的身份验证
        git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git
        
        # 推送备份分支到远程仓库
        git push origin backup-$(date +'%Y%m%d')

    # 设置上游远程仓库，并拉取上游最新的更改
    - name: Set up upstream and fetch changes
      run: |
        git remote add upstream https://github.com/原项目的地址.git  # 替换为上游仓库地址
        git fetch upstream
        git checkout main  # 切换回 main 分支
        git merge upstream/main || echo "Merge conflicts detected. Please resolve them manually."

    # 如果有合并冲突，停止工作流
    - name: Check for merge conflicts
      run: |
        if git ls-files -u | grep -q '^'; then
          echo "Merge conflicts found, stopping the workflow."
          exit 1
        fi

    # 自动化合并成功后，提交并推送到 fork
    - name: Commit and push changes
      run: |
        git config --local user.email "actions@github.com"
        git config --local user.name "GitHub Actions"

        # 如果有更改则提交
        git add .
        if git diff --cached --quiet; then
          echo "No changes to commit."
        else
          git commit -m ":tada: Auto-merge upstream changes"
          
          # 使用 GITHUB_TOKEN 配置推送远程仓库的身份验证
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git
          
          # 推送到主分支
          git push origin main
        fi
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
