name: 'Daily Job'

on:
  schedule:
    - cron: '0 1 * * *'  # 每天UTC时间01:00运行
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'production'

jobs:
  run_job:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.10'

    - name: Set up committer identity
      run: |
        git config --local user.email "actions@github.com"
        git config --local user.name "GitHub Actions"

    - name: Ensure UTF-8 locale
      run: |
        sudo apt-get update && sudo apt-get install -y locales
        sudo locale-gen zh_CN.UTF-8
        export LC_ALL=zh_CN.UTF-8
        export LANG=zh_CN.UTF-8
        export LANGUAGE=zh_CN.UTF-8
        
    - name: Pull latest code from upstream repository
      run: |
        git remote add upstream https://github.com/kimwang1978/collect-tv-txt.git || true
        git fetch upstream
        git checkout main
        # 尝试合并上游项目的最新更改
        git merge upstream/main --allow-unrelated-histories || true

    # 处理所有其他未解决的冲突文件，保留本地分支的版本
    - name: Debug conflict files
      run: |
        conflict_files=$(git ls-files -u | awk '{print $4}' | sort -u)
        if [[ -n "$conflict_files" ]]; then
          echo "Conflicting files detected:"
          echo "$conflict_files"
        fi

    - name: Resolve remaining conflicts by keeping local changes
      run: |
        remaining_conflicts=$(git ls-files -u | awk '{print $4}' | sort -u)
        if [[ -n "$remaining_conflicts" ]]; then
          echo "Resolving remaining conflicts by keeping local branch versions"
          for file in $remaining_conflicts; do
            echo "Processing $file"
            git checkout --ours "$file" || echo "Failed to checkout: $file"
            git add -f -- "$file"  # 使用 -f 强制添加文件
          done
        fi

    - name: Modify main.py to set about and about_video1 to empty strings
      run: |
        sed -i 's/about=.*/about=""/' main.py
        sed -i 's/about_video1=.*/about_video1=""/' main.py
        sed -i 's/about_video2=.*/about_video2=""/' main.py

    - name: Run Python script
      run: python main.py
      
    - name: Upload generated files
      uses: actions/upload-artifact@v4
      with:
        name: generated-files
        path: |
          merged_output.txt
          others_output.txt
          
    - name: 提交更改
      run: |
        git config --local user.email "actions@github.com"
        git config --local user.name "GitHub Actions"
        git add merged_output.txt
        git add merged_output.m3u
        git add merged_output_simple.txt
        git add merged_output_simple.m3u
        git add others_output.txt
        git commit -m ":tada: AutoUpdate $(date +'%Y%m%d')"
        
        current_datetime=$(date +"%Y%m%d_%H%M%S")
        cp merged_output.txt history/"${current_datetime}_merged_output.txt"
        cp others_output.txt history/"${current_datetime}_others_output.txt"
        git add history/"${current_datetime}_merged_output.txt"
        git add history/"${current_datetime}_others_output.txt"
        git commit -m "Archive file with timestamp"
          
    - name: Push changes to my forked repository
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
