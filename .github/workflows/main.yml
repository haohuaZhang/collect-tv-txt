name: 'Sync Fork with Upstream and Run Jobs'

on:
  schedule:
    - cron: '0 1 * * *'  # 每天 UTC 时间 01:00 自动运行
  workflow_dispatch:  # 手动触发

jobs:
  sync_with_upstream:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout this repository
      uses: actions/checkout@v2
      with:
        persist-credentials: false  # 使用自己的 GITHUB_TOKEN

    # 备份当前分支，防止修改丢失
    - name: Create backup branch
      run: |
        git checkout -b backup-$(date +'%Y%m%d')
        git push origin backup-$(date +'%Y%m%d')

    # 设置上游远程仓库，并拉取上游最新的更改
    - name: Set up upstream and fetch changes
      run: |
        git remote add upstream https://github.com/https://github.com/kimwang1978/collect-tv-txt.git  # 替换为原项目地址
        git fetch upstream
        git checkout main  # 确保在 main 分支
        git merge upstream/main || echo "Merge conflicts detected. Please resolve them manually."

    # 如果有合并冲突，停止工作流
    - name: Check for merge conflicts
      run: |
        if git ls-files -u | grep -q '^'; then
          echo "Merge conflicts found, stopping the workflow."
          exit 1
        fi

    # 自动化合并成功后，提交并推送到 fork
    - name: Commit and push changes
      run: |
        git config --local user.email "actions@github.com"
        git config --local user.name "GitHub Actions"

        # 如果有更改则提交
        git add .
        if git diff --cached --quiet; then
          echo "No changes to commit."
        else
          git commit -m ":tada: Auto-merge upstream changes"
          git push origin main
        fi
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  run_jobs:
    needs: sync_with_upstream  # 在合并完成后运行
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip

    - name: Run Python script
      run: |
        python main.py  # 替换为你的实际脚本路径和命令

    # 上传生成的文件
    - name: Upload generated files
      uses: actions/upload-artifact@v4
      with:
        name: generated-files
        path: |
          merged_output.txt
          merged_output.m3u
          merged_output_simple.txt
          merged_output_simple.m3u
          others_output.txt

    # 提交生成的文件
    - name: Commit generated files
      run: |
        git config --local user.email "actions@github.com"
        git config --local user.name "GitHub Actions"
        
        git add merged_output.txt merged_output.m3u merged_output_simple.txt merged_output_simple.m3u others_output.txt || true
        
        # 提交更改并推送
        if git diff --cached --quiet; then
          echo "No new generated files to commit."
        else
          git commit -m "Update generated files"
          git push origin main
        fi
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
